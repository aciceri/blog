name: "Build Site and Deploy"

on:
  push:
    branches:
      - 'release'

jobs:
  bump_version:
    name: Bump Version
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.github_tag_action.outputs.new_tag }}
      changelog: ${{ steps.github_tag_action.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Bump version and push tag
        id: github_tag_action
        uses: mathieudutour/github-tag-action@v4.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: 'release'

  build_and_release:
    name: Build and release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    
    - name: Install Nix
    
      uses: cachix/install-nix-action@v12
      with:
        install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-2.4pre20201221_9fab14a/install
        extra_nix_config: |
          experimental-features = nix-command flakes
          
    - uses: cachix/cachix-action@v8
      name: Cachix
      with:
        name: aciceri-blog
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        
    - name: Push Flakes inputs on Cachix
      run: nix flake archive --json | jq -r '.path,(.inputs|to_entries[].value.path)' | cachix push aciceri-blog
      
    - name: Build
      run: nix run ./#compile
      
    - name: Push on Pinata
      id: ipfs
      if: success()
      uses: aquiladev/ipfs-action@v0.1.5
      with:
        path: ./out
        service: pinata
        pinataKey: ${{ secrets.API_KEY }}
        pinataSecret: ${{ secrets.API_SECRET }}
    
    #- name: Pin on personal IPFS node
    #  if: success()
    #  run: curl --silent --user ${{ secrets.ipfs_user }}:${{ secrets.ipfs_password }} -X POST https://api.ipfs.ccr.ydns.eu/api/v0/pin/add\?arg\=${{ steps.ipfs.outputs.hash }}\&key\=blog
    
    - name: Update DNS with new IPFS hash
      env:
        CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
        RECORD_DOMAIN: 'aciceri.dev'
        RECORD_NAME: '_dnslink.blog'
        CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      uses: textileio/cloudflare-update-dnslink@0fe7b7a1ffc865db3a4da9773f0f987447ad5848
      with:
        cid: ${{ steps.ipfs.outputs.hash }}
        
    - name: Convert CIDv0 to CIDv1
      id: convert_cidv0
      uses: uniswap/convert-cidv0-cidv1@v1.0.0
      with:
        cidv0: ${{ steps.ipfs.outputs.hash }}
        
    - name: Deploy
      if: success()
      uses: crazy-max/ghaction-github-pages@v2
      with:
        target_branch: gh-pages
        build_dir: out/
      env:
        GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
    
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.bump_version.outputs.new_tag }}
        release_name: Release ${{ needs.bump_version.outputs.new_tag }}
        body: |
          IPFS hash of the deployment:
          - CIDv0: `${{ steps.upload.outputs.hash }}`
          - CIDv1: `${{ steps.convert_cidv0.outputs.cidv1 }}`
          The latest release is always accessible to the Cloudflare IPFS gateway at [blog.aciceri.dev](https://blog.aciceri.dev).
          You can also access it directly from an IPFS gateway.
          Alternative URLs:
          - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.dweb.link/
          - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.cf-ipfs.com/
          - [ipfs://${{ steps.upload.outputs.hash }}/](ipfs://${{ steps.upload.outputs.hash }}/)
          - https://cloudflare-ipfs.com/ipfs/${{ steps.upload.outputs.hash }}/
          - https://ipfs.infura.io/ipfs/${{ steps.upload.outputs.hash }}/
          - https://ipfs.io/ipfs/${{ steps.upload.outputs.hash }}/
          ${{ needs.bump_version.outputs.changelog }}
