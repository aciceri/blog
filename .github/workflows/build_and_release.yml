name: "Build Site and Deploy"

on:
  push:
    branches:
      - 'release'

jobs:
  build_and_deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    
    - name: Install Nix
      if: success()
      uses: cachix/install-nix-action@v17
      with:
        extra_nix_config: |
          experimental-features = nix-command flakes
          
    - uses: cachix/cachix-action@v8
      if: success()
      name: Cachix
      with:
        name: aciceri-blog
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        
    - name: Push Flakes inputs on Cachix
      if: success()
      run: nix flake archive --json | jq -r '.path,(.inputs|to_entries[].value.path)' | cachix push aciceri-blog
      
    - name: Build
      if: success()
      run: nix build
      
    - name: Push on Pinata
      id: ipfs
      if: success()
      uses: aquiladev/ipfs-action@v0.1.5
      with:
        path: ./result
        service: pinata
        pinataKey: ${{ secrets.API_KEY }}
        pinataSecret: ${{ secrets.API_SECRET }}
    
    - name: Update DNS with new IPFS hash
      if: success()
      env:
        CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
        RECORD_DOMAIN: 'aciceri.dev'
        RECORD_NAME: '_dnslink.blog'
        CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      uses: textileio/cloudflare-update-dnslink@0fe7b7a1ffc865db3a4da9773f0f987447ad5848
      with:
        cid: ${{ steps.ipfs.outputs.hash }}
        
    - name: Deploy on Github Pages
      if: success()
      uses: crazy-max/ghaction-github-pages@v2
      with:
        target_branch: gh-pages
        build_dir: ./result
        fqdn: blog.aciceri.dev
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
